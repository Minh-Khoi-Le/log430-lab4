name: CI/CD - Build & Docker

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_DB: testdb
          POSTGRES_USER: testuser
          POSTGRES_PASSWORD: testpass
        ports:
          - 5432:5432
        # Donne le temps à la DB de démarrer
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - name: Checkout sources
      uses: actions/checkout@v4

    # ------- Build Backend -------
    - name: Set up Node.js (backend)
      uses: actions/setup-node@v4
      with:
        node-version: 20
        cache: 'npm'
        cache-dependency-path: server/package-lock.json

    - name: Install backend dependencies
      run: cd server && npm ci

    - name: Generate Prisma client & migrate
      run: |
        cd server
        npx prisma generate
        npx prisma migrate deploy
      env:
        DATABASE_URL: "postgresql://testuser:testpass@localhost:5432/testdb"

    - name: Run backend tests
      run: |
        cd server
        # Ajoute ici tes tests si tu en as (ex: npm test)
        # npm test

    # ------- Build Frontend -------
    - name: Set up Node.js (frontend)
      uses: actions/setup-node@v4
      with:
        node-version: 20
        cache: 'npm'
        cache-dependency-path: client/package-lock.json

    - name: Install frontend dependencies
      run: cd client && npm ci

    - name: Build frontend (Vite)
      run: cd client && npm run build

    # ------- Docker build -------
    - name: Build Docker images
      run: docker-compose build
